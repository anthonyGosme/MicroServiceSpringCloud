version: '2.1'

services:

  mysql:
    networks:
      - my-network
    image: mysql:5.7
    mem_limit: 350m
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=rootpwd
      - MYSQL_DATABASE=review-db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=pwd
    healthcheck:
      test: "/usr/bin/mysql --user=user --password=pwd --execute \"SHOW DATABASES;\""
      interval: 10s
      timeout: 10s
      retries: 10

  product:
    networks:
      - my-network
    build: microservices/product-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 30081:80
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:8080/actuator/health}"
      interval: 10s
      timeout: 10s
      retries: 10

  recommendation:
    networks:
      - my-network
    build: microservices/recommendation-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - 30082:80
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:80/actuator/health}"
      interval: 10s
      timeout: 10s
      retries: 10

  product-composite:
    networks:
      - my-network
    build: microservices/product-composite-service
    mem_limit: 350m
    ports:
      - 30080:80
      - "8001:8001"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:80/actuator/health}"
      interval: 10s
      timeout: 10s
      retries: 10

  mongodb:
    networks:
      - my-network
    image: mongo:3.6.9
    mem_limit: 350m
    ports:
      - "27017:27017"
    command: mongod --smallfiles
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 10s
      timeout: 10s
      retries: 10

  rabbitmq:
    networks:
      - my-network
    image: rabbitmq:3.7.8-management
    mem_limit: 350m
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 10s
      retries: 10

  gateway:
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    build: spring-cloud/gateway
    mem_limit: 350m
    ports:
      - "8443:8443"
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl https://localhost:8443/actuator/health -k}"
      interval: 10s
      timeout: 10s
      retries: 10

  auth-server:
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    build: spring-cloud/auth-server
    mem_limit: 350m
    ports:
      - 30084:80
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl http://localhost:80/actuator/health}"
      interval: 10s
      timeout: 10s
      retries: 10

  config-server:
    networks:
      - my-network
    environment:
      - SPRING_PROFILES_ACTIVE=docker,native
      - ENCRYPT_KEY=${CONFIG_SERVER_ENCRYPT_KEY}
      - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}
      - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}
    volumes:
      - /Users/toto/Repo/git/MicroServiceSpringCloud/config-repo:/config-repo
    build: spring-cloud/config-server
    mem_limit: 350m
    ports:
      - 8888:8888
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl http://localhost:8888/actuator/health}"
      interval: 30s
      timeout: 10s
      retries: 10

  review:
    networks:
      - my-network
    build: microservices/review-service
    mem_limit: 350m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_USR=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PWD=${CONFIG_SERVER_PWD}
    ports:
      - 30083:80
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: "${DOCKER_HEALTHCHECK_TEST:-curl localhost:80/actuator/health}"
      interval: 10s
      timeout: 10s
      retries: 10
  zipkin:
    image: openzipkin/zipkin:2.12.9
    mem_limit: 512m
    networks:
      - my-network
    environment:
      - STORAGE_TYPE=mem
      - RABBIT_ADDRESSES=rabbitmq
    ports:
      - 9411:9411
    depends_on:
      rabbitmq:
        condition: service_healthy
networks:
  my-network:
    name: my-network
